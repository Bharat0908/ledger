version: "3.9"
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: ledger
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 20

  mongo:
    image: mongo:7
    ports: ["27017:27017"]
    volumes:
      - mongodata:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672", "15672:15672"]

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      POSTGRES_DSN: postgres://postgres:postgres@postgres:5432/ledger
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    ports: ["8080:8080"]
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      POSTGRES_DSN: postgres://postgres:postgres@postgres:5432/ledger
      MONGO_URI: mongodb://mongo:27017
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started

volumes:
  pgdata: {}
  mongodata: {}
