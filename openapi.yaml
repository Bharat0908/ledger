openapi: 3.0.3
info:
  title: Ledger API
  version: "1.0.0"
  description: Detailed OpenAPI for the banking ledger service.
servers:
  - url: http://localhost:8080
paths:
  /v1/accounts:
    post:
      summary: Create account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [owner, currency, initial_balance]
              properties:
                owner:
                  type: string
                currency:
                  type: string
                initial_balance:
                  type: integer
                  description: initial balance in minor units (paise/cents)
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /v1/accounts/{id}:
    get:
      summary: Get account balance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: integer
  /v1/accounts/{id}/ledger:
    get:
      summary: Get account ledger entries
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        account_id: { type: string, format: uuid }
                        type: { type: string }
                        amount: { type: integer }
                        balance_after: { type: integer }
                        idempotency_key: { type: string }
                        created_at: { type: string, format: date-time }
  /v1/transactions:
    post:
      summary: Enqueue deposit/withdraw
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [account_id, type, amount]
              properties:
                account_id:
                  type: string
                  format: uuid
                type:
                  type: string
                  enum: [deposit, withdraw]
                amount:
                  type: integer
                idempotency_key:
                  type: string
      responses:
        '202':
          description: Accepted
  /v1/transfers:
    post:
      summary: Enqueue transfer between accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [from_account_id, to_account_id, amount]
              properties:
                from_account_id:
                  type: string
                  format: uuid
                to_account_id:
                  type: string
                  format: uuid
                amount:
                  type: integer
                idempotency_key:
                  type: string
      responses:
        '202':
          description: Accepted
components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
